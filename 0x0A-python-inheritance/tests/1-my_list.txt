The ``1-my_list.py`` module
============================================
using 1-my_list.py
============================================

This module has one class ``MyList``

Importing the class:
    >>> MyList = __import__('1-my_list').MyList

Test if MyList is a subclass and/or instance of list.
    >>> my_list = MyList()
    >>> issubclass(MyList, list)
    True

    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True

Test a list of positive numbers.
    >>> my_list = MyList([1, 5, 3, 4, 2, 4])
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 4, 5]

Test a list of negative numbers.
    >>> my_list = MyList([-1, -5, -3, -4, -2, -4])
    >>> my_list.print_sorted()
    [-5, -4, -4, -3, -2, -1]

Test a list of positive and negative numbers.
    >>> my_list = MyList([1, -5, 3, 4, -2, -4])
    >>> my_list.print_sorted()
    [-5, -4, -2, 1, 3, 4]

Test an empty list.
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Test a list containing only one number.
    >>> my_list = MyList([5])
    >>> my_list.print_sorted()
    [5]

Test a list of positive and negative string numbers.
    >>> my_list = MyList(['-1', '-5', '-2', '3', '4'])
    >>> my_list.print_sorted()
    ['-1', '-2', '-5', '3', '4']

Test a list of positive characters.
    >>> my_list = MyList(['z', 'j', 'g', 'c', 'a'])
    >>> my_list.print_sorted()
    ['a', 'c', 'g', 'j', 'z']

Passing more than one argument to sort method.
    >>> my_list = MyList()
    >>> my_list.print_sorted([0, 5])
    Traceback (most recent call last):
    	...
    TypeError: print_sorted() takes 1 positional argument but 2 were given

Test the type of the print_sorted method.
    >>> my_list = MyList()
    >>> type(my_list.print_sorted)
    <class 'method'>

Test the string representation of the object.
    >>> my_list = MyList()
    >>> my_list.append(4)
    >>> print(my_list)
    [4]

Test to see if print_sorted() returns a new list.
    >>> my_list = MyList()
    >>> my_list.append(7)
    >>> my_list.append(1)
    >>> my_list.append(10)
    >>> my_list.print_sorted()
    [1, 10, 7]
    >>> my_list
    [7, 1, 10]

Test different types.
    >>> my_list = MyList([10, "C is fun", "Holberton", 7])
    >>> my_list.print_sorted()
    Traceback (most recent call last):
	...
    TypeError: unorderable types: str() < int()
